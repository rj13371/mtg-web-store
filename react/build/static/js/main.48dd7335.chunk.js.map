{"version":3,"sources":["components/layouts/NavbarComponent.js","components/search/CardSearch.js","views/mtgcards/Mtgcardsindex.js","views/dashboard/EmployeeDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarComponent","useState","isOpen","setIsOpen","Container","Navbar","className","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavbarText","CardSearch","props","query","setQuery","submitted","setSubmitted","history","useLocation","useHistory","handleClickSearch","e","a","preventDefault","body","name","axios","method","url","data","headers","then","response","JSON","stringify","push","to","type","value","placeholder","onChange","event","target","Mtgcardsindex","cards","setCards","location","res","parse","state","useParams","useEffect","console","log","filter","card","_id","map","set_name","rarity","oracle_text","prices","usd","stock","src","image_uris","small","EmployeeDashboard","productName","productDescription","price","productCategory","onSale","formData","setFormData","onSubmit","App","exact","path","render","test","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48dd7335.chunk.js","sourcesContent":["import React,{useState} from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  NavbarText,\n  UncontrolledDropdown,\n  Container,\n  Row,\n  Col,\n  Jumbotron,\n  Button,\n  Form,\n  Input,\n} from \"reactstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default function NavbarComponent() {\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n    <Container>\n    <Navbar className=\"bg-light justify-content-between\" color=\"light\" light expand=\"md\">\n      <NavbarBrand href=\"/\">Mtg Web Store</NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n          <NavItem>\n            <NavLink href=\"#\">Events</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink href=\"#\">Buylist</NavLink>\n          </NavItem>\n          <UncontrolledDropdown nav inNavbar>\n            <DropdownToggle nav caret>\n              Magic The Gathering\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem>\n                Option 1\n              </DropdownItem>\n              <DropdownItem>\n                Option 2\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>\n                Reset\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n        <NavbarText className=\"mr-auto\">Simple Text</NavbarText>\n      </Collapse>\n    </Navbar>\n    </Container>\n  </div>\n  );\n}\n\n\n            \n{/* <input type='text' value={query} placeholder='search for food' onChange={handleChange}></input>\n<Link to={`/food/${query}/drink/${query}`}>Go</Link>\n<button onClick={handleClick}>save to db</button> */}","import React, { useEffect, useState } from \"react\"\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\"\nimport { useParams } from 'react-router-dom'\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios'\n\nfunction CardSearch(props) {\n  const [query, setQuery] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n//   useEffect(() => {\n//     const params = new URLSearchParams()\n//     if (query) {\n//       params.append(\"name\", query)\n//     } else {\n//       params.delete(\"name\")\n//     }\n//   }, [query])\n\n\n  const handleClickSearch = async (e) => {\n    e.preventDefault();\n\n    const body = {\n        name: query\n    }\n  \n\n     await axios({\n        method: 'get',\n        url: `/mtgcards/card?name=${query}`,\n        data: body,\n            headers: {\n              'Content-Type': 'application/json'\n            }\n      }).then(response => {\n        return JSON.stringify(response)\n         })\n        .then(data =>{\n          history.push(\"/cards/\", { query: data });\n          setSubmitted(true);\n        })\n\n        if (submitted) {\n            return <Redirect to='/cards/' /> \n          }\n\n}\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={query}\n        placeholder=\"Search For Magic Card\"\n        onChange={handleChange}\n      ></input>\n        <button onClick={handleClickSearch}>Search</button>\n\n    </div>\n\n\n\n  );\n}\n\nexport default CardSearch\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams, useHistory } from \"react-router-dom\";\nimport MtgCard from \"./MtgCard\";\n\nexport default function Mtgcardsindex() {\n  const [cards, setCards] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n\n  const location = useLocation();\n  const query = JSON.parse(location.state.query);\n  const res = query.data;\n\n  // const history = useHistory();\n  // const query = history.state.query\n  const { data } = useParams();\n\n  useEffect(() => {\n    setCards(res);\n    console.log(cards);\n  }, []);\n\n  //   useEffect(() => {\n\n  //     if (data.name){\n  //         setisLoading(false)\n  //          console.log(isLoading)\n\n  //         }\n\n  //   }, [isLoading]);\n\n  return (\n    <div>\n      {/* <MtgCard data={data}/> */}\n\n      <table>\n        {cards\n          .filter(function (card) {\n            return card._id;\n          })\n          .map((card) => (\n            <tr>\n              <td>{card.name}</td>\n              <td>{card.set_name}</td>\n              <td>{card.rarity}</td>\n              <td>{card.oracle_text}</td>\n              <td>{card.prices.usd}</td>\n              <td>{card.stock}</td>\n              <img src={`${card.image_uris.small}`} />\n            </tr>\n          ))}\n      </table>\n    </div>\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\"\nimport { Redirect } from \"react-router-dom\";\n\nimport axios, { AxiosInstance } from 'axios';\n// import * as tunnel from 'tunnel';\n// const agent = tunnel.httpsOverHttp({\n//     proxy: {\n//         host: 'proxy.mycorp.com',\n//         port: 5000,\n//     },\n// });\n\n// const axiosClient = axios.create({\n//     baseURL: 'https://some.api.com:443',  // here I specify port 443\n//     httpsAgent: agent,\n// });\n\nconst EmployeeDashboard = () => {\n\n    const [submitted, setSubmitted] = useState(false);\n\n  const [formData, setFormData] = useState({\n    productName: \"\",\n    productDescription: \"\",\n    stock: \"\",\n    price: \"\",\n    productCategory: \"\",\n    onSale: \"\"\n  })\n\n  const history = useHistory();\n\n  const {\n    productName,\n    productDescription,\n    stock,\n    price,\n    productCategory,\n    onSale,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    const body = {\n      productName: productName,\n      productDescription: productDescription,\n      stock: stock,\n      price: price,\n      productCategory: productCategory,\n      onSale: onSale,\n    };\n\n    await axios({\n      method: \"post\",\n      url: \"/products/addproduct/\",\n      data: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(response => {\n        console.log(response)\n         })\n        // .then(data =>{\n        //   history.push(\"/\", { query: data });\n        //   setSubmitted(true);\n        // })\n\n        // if (submitted) {\n        //     return <Redirect to='/' /> \n        //   }\n\n\n  };\n\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Product Name\"\n            name=\"productName\"\n            value={productName}\n            onChange={onChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Product Description\"\n            name=\"productDescription\"\n            value={productDescription}\n            onChange={onChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Product Category\"\n            name=\"productCategory\"\n            value={productCategory}\n            onChange={onChange}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Stock\"\n            name=\"stock\"\n            value={stock}\n            onChange={onChange}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Price\"\n            name=\"price\"\n            value={price}\n            onChange={onChange}\n          />\n          <input\n            type=\"checkbox\"\n            placeholder=\"onSale\"\n            name=\"onSale\"\n            value={onSale}\n            onChange={onChange}\n          />\n        </div>\n        <input type=\"submit\" value=\"AddProduct\" />\n      </form>\n    </Fragment>\n  )\n}\n\nexport default EmployeeDashboard","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavbarComponent from './components/layouts/NavbarComponent';\nimport CardSearch from './components/search/CardSearch';\nimport Mtgcardsindex from './views/mtgcards/Mtgcardsindex';\nimport EmployeeDashboard from './views/dashboard/EmployeeDashboard';\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n  Row,\n  Col,\n  Jumbotron,\n  Button,\n  Form,\n  Input\n} from 'reactstrap';\n\nfunction App() {\n  return (\n<Router>\n  <Fragment>\n    <NavbarComponent/>\n    <CardSearch/>\n   <Route exact path='/cards/' render={(props) => (<Mtgcardsindex test=\"hi\" {...props}/>)}/>\n   <Route exact path='/employeedashboard/' component={EmployeeDashboard}/>\n\n  </Fragment>\n</Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}